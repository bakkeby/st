# The below configuration file is parsed using the libconfig library.
#
# Refer to the official documentation if you need it. Here is a quick breakdown
# of the syntax used.
#
# A value can be set using an equals sign or a colon, the trailing semicolon is optional
# and whitespace is not significant.
#
#   name = value;
#   name: value;
#
# { settings ... }  - curly braces denote a group of settings, and a group can contain
#                     multiple types of configuration
# [ value, ... ]    - square brackets denote an array, and all values within the array
#                     must be of the same configuration type
# ( value, ... )    - parentheses denote a list, and a list can contain multiple groups,
#                     arrays, scalar values or other lists
# /* */, // and #   - treated as comments
# @included "path"  - include another configuration file - useful if you want to split
#                     the configuration into smaller parts
#
# When it comes to syntax highlighting for these kind of configuration files you may
# try Ruby, awk, cucumber, perl, puppet or R.
#


# Font configuration
#
# Fonts here can either be a single string indicating the (primary) font to use
# or it can be a list of fonts the additional entries will be used as fallback
# fonts should a glyph not exist in the primary font.
#
# Also see: http://freedesktop.org/software/fontconfig/fontconfig-user.html
#
fonts = (
	"Liberation Mono:pixelsize=12:antialias=true:autohint=true",
)

# Border configuration
#
# The border width can be described as a percentage of the cell width, or
# a fixed width (in pixels) can be specified.
#
# The intent of the percentage width is to make the border scale with the
# text when using monitors that have different DPI (and using a font that
# scales accordingly). As such the percent takes precedence over the
# fixed width if positive.
#
border = {
	percent = 20;  # size relative to cell width, e.g. 20%
	width = 2;  # fixed width in pixels
}

# This controls features that can be toggled on or off.
#
functionality:
{
	# Option to disable alternative screens.
	AllowAltScreen = true;
	# Optionally the use of bold and italic fonts can be disabled
	AllowItalic = true;
	AllowBoldItalic = true;
	AllowBold = true;
	# Allow certain non-interactive (insecure) window operations such as
   	# setting the clipboard text
	AllowWindowOperations = false;
	# Use different opacity levels depending on whether the terminal has
	# focus or not.
	AlphaFocusHighlight = false;
	# Adds gradient transparency (top to bottom)
	AlphaGradient = false;
	# or alternatively (bottom to top)
	AlphaInverseGradient = false;
	# Sets size hints to allow any size increments, otherwise increments by
	# the height and width of full cells. Note that this does not center the
	# terminal content within the window itself.
	AnySize = false;
	# By default bold text is rendered simply as bold. If the below is
	# enabled then bold text will additionally be drawn with the bright
	# variant of the current color (as per mainstream st default).
	BoldIsBright = false;
	# If boxdraw is enabled then most of the lines and block characters will be
	# rendered internally for percect alignment between cells. This means that
	# the font will not be used for box characters in the range U2500 - U259F
	# except for dashes/diagonals.
	BoxDraw = false;
	# Bold will affect the thickness of lines unless disabled below.
	# Italics are always ignored.
	BoxDrawBoldAffectsLineThickness = false;
	# Render braille (U28XX) as adjacent "pixels" (uses font if disabled)
	BoxDrawForBraille = false;
	# By default st only sets PRIMARY on selection. This option allows for the
	# selection to go straight to the clipboard instead.
	CopySelectionToClipboard = true;
	# Makes the cursor color the inverse of the current cell color
	DynamicCursorColor = false;
	# Hide the X cursor whenever a key is pressed
	HideMouseCursor = false;
	# Hide the terminal cursor when the window loses focus - as opposed to
	# showing a hollow outline.
	HideTerminalCursor = false;
	# Makes st ignore terminal color attributes by forcing display of the
	# default foreground and background colors only - giving a monochrome look
	Monochrome = false;
	# Option to set the _MOTIF_WM_HINTS property for the st window which, if
	# the window manager respects it, will show the st window without window
	# decorations.
	NoWindowDecorations = false;
	# Set this to false if you want the selection to disappear when you
	# select something different in another window.
	RetainSelectionPerWindow = true;
	# This changes the mouse shape to the global default when the running
	# program subscribes to mouse events, for instance, in programs like
	# ranger and fzf. This emulates the behaviour shown by vte terminals
	# like termite.
	SwapMouse = true;
	# Use a cursor from the cursor theme rather than the default X cursor
	ThemedCursor = false;
	# Option to use a specific background color for selected text (selectionbg)
	UseSelectionBackgroundColor = false;
	# Option to use a specific foreground color for selected text (selectionfg)
	UseSelectionForegroundColor = false;
	# Use XftFontMatch in place of FcFontMatch.
	#
	# XftFontMatch calls XftDefaultSubstitute which configures various match
	# properties according to the user's configured Xft defaults (xrdb) as well
	# as according to the current display and screen. Most importantly, the
	# screen DPI is computed [1]. Without this a default DPI of 75 [2] is used.
	#
	# [1]: https://cgit.freedesktop.org/xorg/lib/libXft/tree/src/xftdpy.c?id=libXft-2.3.2#n535
	# [2]: https://cgit.freedesktop.org/fontconfig/tree/src/fcdefault.c?id=2.11.1#n255
	#
	UseXftFontMatch = false;
	# Briefly inverts window content on terminal bell event
	VisualBell = false;
	# Allows wide glyphs to be drawn as-is as opposed to smaller or cut glyphs
	# being rendered. This can lead to overlapping or other side effects.
	WideGlyphs = false;
	# Option to load colors and preferences from Xresources on startup
	Xresources = true;
}

# What program is execed by st depends of these precedence rules:
#    1: program passed with -e
#    2: scroll and/or utmp
#    3: SHELL environment variable
#    4: value of shell in /etc/passwd
#    5: value of shell in the below config
#
# As such note that the setting here is a fallback option.
#
#shell = "/bin/sh";

# utmp - the simple login manager
# https://git.suckless.org/utmp/
#utmp = "utmp"

# Scroll program: to enable use a string like "scroll"
#scroll = "scroll"

#stty_args = "stty raw pass8 nl -echo -iexten -cstopb 38400";

# Sixel rgb byte order: LSBFirst or MSBFirst
sixelbyteorder = "LSBFirst";

# Kerning / character bounding-box multipliers
cwscale = 1.0;
chscale = 1.0;

# The opacity level of the terminal.
#
# Whether the unfocused value is used depends on the AlphaFocusHighlight
# functionality being enabled.
#
# The gradient constant defines the minimum opacity for the calculated
# gradient transparency levels.
#
alpha:
{
	focused = 0.80;
	unfocused = 0.60;
	gradient_minimum = 0.46;
}


# This defines the color scheme of st.
#
# The 16 color palette starts with 8 normal colors and 8 bright colors.
# The 256 color palette (colors 17 to 256) are dynamically generated during
# runtime.
#
# Additional colors can be specified:
#   cursor - used for the terminal cursor
#   cursor_reverse - used when cursor is on selected text
#   background - the primary background color to use
#   foreground - the primary foreground color to use
#   selection_background - the background color to use for selected text (*)
#   selection_foreground - the foreground color to use for selected text (*)
#   highlight_background - background color for highlighting search results
#   highlight_foreground - foreground color for highlighting search results
#   unfocused_background - the foused and unfocused backgrounds are part of the
#   focused_background     alpha focus highlight functionality and drives what
#                          the main background is set to depending on focus (*)
#   badattribute_foreground - this maps to the defaultattr config and is used
#                             to highlight bold or italic when the selected
#                             font does not support those attributes
#
#   (* if functionality is enabled)
#
# Values can be:
#   an RGB hex string, e.g. "#f39a00"
#   a color index starting from 0, e.g. 7
#   the name of another additional color, e.g. "background"
#
# Note that if an additional color point to another color by index or string
# then the Xresource string for that color will have no effect.
#
colors = {
	# 8 normal colors
	color0 = "black"
	color1 = "red3"
	color2 = "green3"
	color3 = "yellow3"
	color4 = "blue2"
	color5 = "magenta3"
	color6 = "cyan3"
	color7 = "gray90"

	# 8 bright colors
	color8 = "gray50"
	color9 = "red"
	color10 = "green"
	color11 = "yellow"
	color12 = "#5c5cff"
	color13 = "magenta"
	color14 = "cyan"
	color15 = "white"

	# additional colors
	cursor = "#add8e6"
	cursor_reverse = "#555555"
	background = "#000000"
	foreground = "#e5e5e5"
	selection_background = "background"
	selection_foreground = "foreground"
	highlight_background = 160
	highlight_foreground = 15
	focused_background = 0
	unfocused_background = 6
	badattribute_foreground = 11
}

# Word delimiter string
#
# More advanced example: " `'\"()[]{}"
word_delimiters = " ";

# Word delimiters for short and long jumps for the keyboard select feature
keyboardselect = {
	short_delimiter = "!\"#$%&'()*+,-./:;<=>?@[\\]^`{|}~ ";
	long_delimiter = " ";
}

# Drag and drop escape characters.
#
# This will add a '\' before any characters specified in the string.
drag_and_drop_escape_characters = " !\"#$&'()*;<>?[\\]^`{|}~";

# Selection timeouts (in milliseconds)
double_click_timeout = 300;
triple_click_timeout = 600;

# A normal mouse selection is made using left click, drag and release.
# Optionally a rectangular selection can be made by also holding a modifier
# key which is specified here.
rectangular_selection_modifier = "Ctrl";

# URLs are clickable in st and can be opened with a designated command as
# specified below.
# Optionally the user may be required to hold down a modifier key to open
# a URL to indicate the intent to do so.
# Common options are: Ctrl, Shift, or Any
url_opener_modifier = "Any";
url_opener_cmd = "xdg-open";

# State bits to ignore when matching key or button events. By default,
# numlock (Mod2Mask) and keyboard layout (XK_SWITCH_MOD) are ignored.
modifiers_to_ignore = "Mod2Mask|XK_SWITCH_MOD"

# Synchronized-Update timeout (in milliseconds)
# https://gitlab.com/gnachman/iterm2/-/wikis/synchronized-updates-spec
synchronized_update_timeout = 200;

# Draw latency range in ms - from new content/keypress/etc until drawing.
# within this range, st draws when content stops arriving (idle). mostly it's
# near minlatency, but it waits longer for slow updates to avoid partial draw.
# low minlatency will tear/flicker more, as it can "detect" idle too early.
minlatency = 2;
maxlatency = 33;

# These are settings for the terminal cursor
terminal_cursor = {

	# Default style of the terminal cursor
	#    0: Blinking block
	#    1: Blinking block (default)
	#    2: Steady block ("â–ˆ")
	#    3: Blinking underline
	#    4: Steady underline ("_")
	#    5: Blinking bar
	#    6: Steady bar ("|")
	#    7: Blinking st cursor
	#    8: Steady st cursor
	#
	# https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h4-Functions-using-CSI-_-ordered-by-the-final-character-lparen-s-rparen:CSI-Ps-SP-q.1D81
	#
	style = 2;

	# Custom cursor (used for shapes 7 and 8)
	custom_cursor = 0x2603;  # snowman (U+2603)

	# Blinking timeout (set to 0 to disable blinking) for the terminal blinking
	# attribute
	blink_timeout = 800;

	# Thickness of underline and bar cursors
	thickness = 2;
}

# These are settings for the mouse cursor
mouse_cursor = {
	shape = "arrow";  # default shape of the mouse cursor
	url_shape = "hand2";  # shape of the mouse cursor when hovering URLs
}

# The bell volume should be a value between -100 and 100.
# Set to 0 to disable bell.
bell_volume = 50;

# Default TERM value
terminal_name = "st-256color";

# This controls the initial size of the terminal.
#
# The size can be expressed as the number of columns and rows, in
# which case the size of the window is determined by the cell size
# which again depends on the font and font size.
#
# Alternatively the size can be expressed as implicit width and
# height.
#
# If both are specified then the implicit size takes precedence.
# Command line arguments of -g and -G will override these settings.
#
terminal_size = {
	cols = 80;
	rows = 24;
	# width = 564;
	# height = 364;
}

# Maximum amount of lines that st should be able to scroll back
scrollback_history = 2000
# The amount of scrollback history to start with and increment as and when needed
scrollback_history_increment = 200

# Optionally a window icon can be specified here.
# The image file must be in farbfeld format.
#window_icon = "/usr/local/share/pixmaps/st.ff"

# Printable characters in ASCII, used to estimate the advance
# width of single wide characters.
ascii_printable =
	" !\"#$%&'()*+,-./0123456789:;<=>?"
	"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"
	"`abcdefghijklmnopqrstuvwxyz{|}~";

# The initial path that st should use as the working directory can
# be specified here (alternatively set via -d command line option).
#
#initial_working_directory = "~";

# Undercurl is in relation to support for special underlines.
#
# Example test command:
#    $ echo -e "\e[4:3m\e[58:5:10munderline\e[0m"
#                  ^ ^     ^ ^  ^- sets terminal color 10
#                  | |     |  \- indicates that terminal colors should be used
#                  | |      \- indicates that underline color is being set
#                  |  \- sets underline style to curvy
#                   \- set underline
#
# Available undercurl styles:
#
# Curly:
#  _   _   _   _
# ( ) ( ) ( ) ( )
#   (_) (_) (_) (_)
#
# Spiky:
#
# /\  /\  /\  /\
#   \/  \/  \/
#
# Capped:
#  _     _     _
# / \   / \   / \
#    \_/   \_/
#
undercurl_style = "Curly";

# This contains a list of named commands.
#
# These names can later be passed to certain functions configuring mouse
# bindings or keybindings.
#
# The commands are in execv format which means separate strings for each
# parameter. For example "st", "-n", "name" rather than "st -n name".
#
commands = (
	{ name = "openurlcmd", command = [ "/bin/sh", "-c", "xurls | dmenu -l 10 -w $WINDOWID | xargs -r open" ] },
	{ name = "setbgcolorcmd", command = [ "/bin/sh", "-c", "printf '\033]11;#008000\007'" ] },
	{ name = "iso14755cmd", command = [ "/bin/sh", "-c", "CODE=$(dmenu -e \"$WINDOWID\" -p \"codepoint:\" </dev/null) && printf \"\u$CODE\"" ] },
	{ name = "nsxiv", command = [ "nsxiv" ] },
	{ name = "xdg-open", command = [ "xdg-open" ] },
)

# Mouse button bindings for shortcuts.
#
# Modifier options:
#    Any  None  Super  Shift  Alt  Ctrl  AltGr  ShiftGr - can be combined
#
# Button indicates which mouse button this binding applies to. Below are the
# button numbers and their associated names.
#
#    1  Left button
#    2  Middle button (wheel‑press)
#    3  Right button
#    4  Scroll wheel up
#    5  Scroll wheel down
#    6  Scroll wheel left (horizontal tilt)
#    7  Scroll wheel right (horizontal tilt)
#    8  Back button (often side‑button on multi‑button mice)
#    9  Forward button (second side‑button)
#
# Function is the internal function name to call. For options refer to the
# keybindings section below.
#
# Argument is the value to pass to the function. The values passed are specific
# to the function and not all functions take arguments. Note that st default
# configuration passes escape code arguments of "\031" and "\005" to ttysend to
# scroll on alt screens. Libconfig does not parse octal strings and thus the
# argument would come through with a literal backslash. Use hexadecimal values
# instead ("\x19" and "\x05"). Command arguments are expected to be named entries
# in the commands configuration above.
#
# Release indicates whether the function is to trigger on button press or
# on button release. It can be a boolean or an integer.
#
# Screen options:
#    Pri  Alt  All (and long names Primary, Alternate and Both)
#
# Beware that overloading Button1 will disable the selection.
#
mouse_bindings = (
	{ modifier = "Ctrl", button = 2, function = "selopen", release = true },
	{ modifier = "Any", button = 2, function = "paste", release = true },
	{ modifier = "Any", button = 3, function = "plumb", argument = "nsxiv", release = true },
	{ modifier = "Any", button = 4, function = "kscrollup", argument = 1, screen = "Pri" },
	{ modifier = "Any", button = 5, function = "kscrolldown", argument = 1, screen = "Pri" },
	{ modifier = "Any", button = 4, function = "ttysend", argument = "\x19", screen = "Alt" },
	{ modifier = "Any", button = 5, function = "ttysend", argument = "\x05", screen = "Alt" },
)

#
# Modifier options:
#    Any  None  Super  Shift  Alt  Ctrl  AltGr  ShiftGr - can be combined
#
# Key is the keysym name without the XK_ prefix, e.g. "bracketright", look these up using xev
#
# Function is the internal function name to call, options are:
#
#    clipcopy            searchforward       printscreen           externalpipe_screen_out
#    clippaste           searchbackward      printsel              externalpipe_screen_in
#    selopen             scrolltoprompt      numlock               externalpipe_screen_inject
#    selpaste            kscrolldown         ttysend               externalpipe_hist_out
#    paste               kscrollup           newterm               externalpipe_hist_in
#    opencopied          keyboard_select     zoom                  externalpipe_hist_inject
#    copyurl             fullscreen          zoomabs               externalpipe_osc133_out
#    sendbreak           toggleprinter       zoomreset             externalpipe_osc133_in
#                                            changealpha           externalpipe_osc133_inject
#                                            changealphaunfocused  plumb
#
# Argument is the value to pass to the function. The values passed are specific
# to the function and not all functions take arguments. Note that st default
# configuration passes escape code arguments of "\031" and "\005" to ttysend to
# scroll on alt screens. Libconfig does not parse octal strings and thus the
# argument would come through with a literal backslash. Use hexadecimal values
# instead ("\x19" and "\x05"). Command arguments are expected to be named entries
# in the commands configuration above.
#
# Screen options:
#    Pri  Alt  All (and long names Primary, Alternate and Both)
#
keybindings = (
	{ modifier = "Any", key = "Break", function = "sendbreak" },
	{ modifier = "Ctrl", key = "Print", function = "toggleprinter" },
	{ modifier = "Shift", key = "Print", function = "printscreen" },
	{ modifier = "Any", key = "Print", function = "printsel" },
	{ modifier = "Ctrl+Shift", key = "Prior", function = "zoom", argument = +1 },
	{ modifier = "Ctrl+Shift", key = "Next", function = "zoom", argument = -1 },
	{ modifier = "Ctrl+Shift", key = "C", function = "clipcopy" },
	{ modifier = "Ctrl+Shift", key = "V", function = "clippaste" },
	{ modifier = "Ctrl+Shift", key = "O", function = "changealpha", argument = +0.05 },
	{ modifier = "Ctrl+Shift", key = "P", function = "changealpha", argument = -0.05 },
	{ modifier = "None", key = "F11", function = "fullscreen" },
	{ modifier = "Alt", key = "Return", function = "fullscreen" },
	{ modifier = "Shift", key = "Page_Up", function = "kscrollup", argument = -1, screen = "Pri" },
	{ modifier = "Shift", key = "Page_Down", function = "kscrolldown", argument = -1, screen = "Pri" },
	{ modifier = "Ctrl+Shift", key = "Y", function = "paste" },
	{ modifier = "Shift", key = "Insert", function = "paste" },
	{ modifier = "Ctrl+Shift", key = "Num_Lock", function = "numlock" },
	{ modifier = "Alt", key = "l", function = "copyurl" },
	{ modifier = "Alt", key = "o", function = "opencopied", argument = "xdg-open" },
	{ modifier = "Ctrl+Shift", key = "Return", function = "newterm" },
	{ modifier = "Ctrl+Shift", key = "U", function = "externalpipe_screen_out", argument = "openurlcmd" },
	{ modifier = "Ctrl+Shift", key = "M", function = "externalpipe_screen_in", argument = "setbgcolorcmd" },
	{ modifier = "Ctrl+Shift", key = "I", function = "externalpipe_screen_inject", argument = "iso14755cmd" },
	{ modifier = "Ctrl+Shift", key = "Escape", function = "keyboard_select" },
	{ modifier = "Ctrl+Shift", key = "F", function = "searchforward" },
	{ modifier = "Ctrl+Shift", key = "B", function = "searchbackward" },
	{ modifier = "Ctrl", key = "Page_Up", function = "scrolltoprompt", argument = -1, screen = "Pri" },
	{ modifier = "Ctrl", key = "Page_Down", function = "scrolltoprompt", argument = 1, screen = "Pri" },
)
